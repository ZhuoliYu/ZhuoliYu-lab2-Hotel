// <auto-generated />
using System;
using Lab1_DataAnnotations_Hotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab1_DataAnnotations_Hotel.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20220403035317_initialllise")]
    partial class initialllise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.Credit", b =>
                {
                    b.Property<int>("CreditNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditNumber"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.HasKey("CreditNumber");

                    b.HasIndex("ClientId");

                    b.ToTable("Credit");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.CurrentlyBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrentClientId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentRoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentClientId");

                    b.HasIndex("CurrentRoomNumber");

                    b.ToTable("CurrentlyBooking");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.PreviouslyBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PreviousClientId")
                        .HasColumnType("int");

                    b.Property<string>("PreviousRoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PreviousClientId");

                    b.HasIndex("PreviousRoomNumber");

                    b.ToTable("PreviouslyBooking");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.Room", b =>
                {
                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Section")
                        .HasColumnType("int");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.HasKey("RoomNumber");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.Credit", b =>
                {
                    b.HasOne("Lab1_DataAnnotations_Hotel.Models.Client", "Client")
                        .WithMany("Credits")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.CurrentlyBooking", b =>
                {
                    b.HasOne("Lab1_DataAnnotations_Hotel.Models.Client", "CurrentClient")
                        .WithMany("CurrentlyBooking")
                        .HasForeignKey("CurrentClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_DataAnnotations_Hotel.Models.Room", "CurrentRoom")
                        .WithMany("CurrentlyBooking")
                        .HasForeignKey("CurrentRoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentClient");

                    b.Navigation("CurrentRoom");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.PreviouslyBooking", b =>
                {
                    b.HasOne("Lab1_DataAnnotations_Hotel.Models.Client", "PreviousClient")
                        .WithMany("PreviouslyBooking")
                        .HasForeignKey("PreviousClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_DataAnnotations_Hotel.Models.Room", "PreviousRoom")
                        .WithMany("PreviouslyBooking")
                        .HasForeignKey("PreviousRoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviousClient");

                    b.Navigation("PreviousRoom");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.Client", b =>
                {
                    b.Navigation("Credits");

                    b.Navigation("CurrentlyBooking");

                    b.Navigation("PreviouslyBooking");
                });

            modelBuilder.Entity("Lab1_DataAnnotations_Hotel.Models.Room", b =>
                {
                    b.Navigation("CurrentlyBooking");

                    b.Navigation("PreviouslyBooking");
                });
#pragma warning restore 612, 618
        }
    }
}
